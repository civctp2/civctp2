################################################################################
# Standard Template Definitions
################################################################################

################################################################################
# Fonts...
################################################################################

# Font that should be used for the entire UI for consistency reasons.
# For more information see GUI Bloopers: Don'ts and Do's by Jeff Johnson.


template CTP2_STANDARD_FONT {
	# Times New Roman Bold
	string fontname 			"timesbd.ttf"

	# 10 point
	int fontsize				10

	# Dark Grey
	int fontcolorred			50
	int fontcolorgreen			50
	int fontcolorblue			50
}

# One of the few variations on the standard font this is a different size
# for titles.
# For more information see GUI Bloopers: Don'ts and Do's by Jeff Johnson.
template CTP2_STANDARD_TITLE_FONT {
	# Times New Roman Bold
	string fontname 			"timesbd.ttf"

	# 12 point
	int fontsize			12

	# Dark grey
	int fontcolorred			50
	int fontcolorgreen			50
	int fontcolorblue			50
}

# Another Variation -- for Header buttons
# For more information see GUI Bloopers: Don'ts and Do's by Jeff Johnson.
template CTP2_HEADER_FONT {
	# Times New Roman Bold
	string fontname 			"times.ttf"
	# string fontname 			"arial.ttf"

	# 9 point
	int fontsize			8

	# Drak Grey
	int fontcolorred			50
	int fontcolorgreen		50
	int fontcolorblue			50
}

#Large grey shadow font for in-game DialBox titles and Shell
template CTP_GREY_TITLE_FONT:CTP2_STANDARD_TITLE_FONT  {
	string fontname			"times.ttf"	
#	int	xpix	499
#	int	widthpix	84
#	int	heightpix	20
#	int	bevelwidth	0
	int fontcolorred			90
	int fontcolorgreen		70
	int fontcolorblue			60
	bool shadowfont			TRUE
	int fontshadowcolorred 		255			
	int fontshadowcolorgreen 	245
	int fontshadowcolorblue 	245
	int fontsize			14
}

#Large dark gold shadow font for in-game DialBox titles and Shell
template CTP_GOLD_TITLE_FONT:CTP2_STANDARD_TITLE_FONT  {
	string fontname			"timesbd.ttf"	
	int	xpix	499
	int	widthpix	84
	int	heightpix	20
	int	bevelwidth	0
	int fontcolorred			60
	int fontcolorgreen		60
	int fontcolorblue			40
	bool shadowfont			TRUE
	int fontshadowcolorred 		200			
	int fontshadowcolorgreen 	200
	int fontshadowcolorblue 	100
	int fontsize			16
}

################################################################################
# Templates...
################################################################################

### CTP2_STATIC_BASE ###
# Basis for all CTP2_STATIC definitions.
template CTP2_STATIC_BASE:CTP2_STANDARD_FONT {
	# Runtime type.
	string	objecttype		"ctp2_Static"
}

### CTP2_STATIC_CHROMA ###
# Basis for all CTP2_STATICs that require chromakey.
template CTP2_STATIC_CHROMA:CTP2_STATIC_BASE {
	# Enable chromakey for blits.
	string	imagebltflag	"chromakey"
}

### CTP2_STATIC_GROUP ###
# Organizational control for grouping other controls, this
# ignores all mouse events and generally should not have
# any images.
template CTP2_STATIC_GROUP:CTP2_STATIC_BASE {
	# Ignore mouse events.
	bool		mouseblind		true
}

### CTP2_STATIC_BACKGROUND ###
# Similar to the static group, this one is derived from
# the chroma key background since it will often contain
# images.
template CTP2_STATIC_BACKGROUND:CTP2_STATIC_CHROMA {
	# Ignore mouse events.
	bool		mouseblind		true
}

### CTP2_STATIC_IMAGE ###
# Single image background.
template CTP2_STATIC_IMAGE:CTP2_STATIC_BACKGROUND {
	# Image layout.
	int		numberoflayers		1
	int		imagesperlayer		1

	# Background.
	bool	layeralways0		true
}

### CTP2_STATIC_IMAGE_SIZABLE ###
# Stretchable image with two endcaps.
template CTP2_STATIC_IMAGE_SIZABLE:CTP2_STATIC_IMAGE {
	# Three images per layer.
	int		imagesperlayer		3

	# Mark the middle images as stretchable.
	bool	imagestretchx01		true

	string imageblttype01 "tile"
}

################################################################################
# Button Templates...
################################################################################

### CTP2_BUTTON_BASE ###
# Basis for all CTP2_BUTTON definitions.
template CTP2_BUTTON_BASE:CTP2_STANDARD_FONT {
	# Runtime type.
	string	objecttype		"ctp2_Button"
}

### CTP2_BUTTON_CHROMA ###
# Basis for all CTP2_BUTTONs that require chromakey.
template CTP2_BUTTON_CHROMA:CTP2_BUTTON_BASE {
	# Enable chromakey for blits.
	string	imagebltflag	"chromakey"
}

### CTP2_BUTTON_NO_OVERLAY_STATES ###
# This button has all independent states.
# Iconic button, provide the following states...
#   image00		Disabled
#   image10		Normal (raised)
#   image30		Highlight
#   image20		Pressed
template CTP2_BUTTON_NO_OVERLAY_STATES:CTP2_BUTTON_CHROMA {
	# Image layout.
	int		numberoflayers		4
	int		imagesperlayer		1

	# Background.
	bool	layerdisabled0		true
	bool	layerup1			true
	bool	layerhighlight2		true
	bool	layerdown3			true
}

### CTP2_BUTTON_ICONIC ###
# Iconic button, provide the following states...
#   image00		Background (disabled)
#   image10		Normal (raised)
#   image20		Pressed
#   image30		Highlight (overlay highlight)
template CTP2_BUTTON_ICONIC:CTP2_BUTTON_CHROMA {
	# Image layout.
	int		numberoflayers		4
	int		imagesperlayer		1

	# Background.
	bool	layeralways0		true
	bool	layerup1			true
	bool	layerdown2			true
	bool	layerhighlight3		true
}

### CTP2_BUTTON_ICONIC_OVERLAY ###
# Iconic button, provide the following states...
#   image00		Background (disabled)
#   image10		Normal (raised)
#   image20		Pressed
#   image30		Highlight (overlay highlight)
#   image40		Icon Overlay
template CTP2_BUTTON_ICONIC_OVERLAY:CTP2_BUTTON_CHROMA {
	# Image layout.
	int		numberoflayers		5
	int		imagesperlayer		1

	# Background.
	bool	layeralways0		true
	bool	layerup1			true
	bool	layerdown2			true
	bool	layerhighlight3		true
	bool	layeralways4		true
}

### CTP2_BUTTON_SIZABLE ###
# Similar to CTP2_BUTTON_ICONIC, this requires two
# endcaps and a tilable middle.
#   image_0		Left
#   image_1		Middle (tilable)
#   image_2		Right
template CTP2_BUTTON_SIZABLE:CTP2_BUTTON_ICONIC {
	# Three images per layer.
	int		imagesperlayer		3

	string  imageblttype01 "tile"
	string  imageblttype11 "tile"
	string  imageblttype21 "tile"
	string  imageblttype31 "tile"

	# Mark the middle images as stretchable.
	bool	imagestretchx01		true
	bool	imagestretchx11		true
	bool	imagestretchx21		true
	bool	imagestretchx31		true
}

### CTP2_GENERIC_ARROW_BUTTON ###
# Arrow button format, provide the following states...
#   image00		Background (enabled)
#   image10		Highlight
#   image20		Pressed
#   image30		Disabled
template CTP2_GENERIC_ARROW_BUTTON:CTP2_BUTTON_CHROMA {
	# Image layout.
	int		numberoflayers		4
	int		imagesperlayer		1

	# Background.
	bool	layeralways0		true
	bool	layerhighlight1		true
	bool	layerdown2			true
	bool	layerdisabled3		true
}

################################################################################
# List Templates...
################################################################################

################################################################################
# Tab Templates...
################################################################################

### CTP2_TAB_GROUP ###
# Basis for all tab group definitions.
template CTP2_TAB_GROUP:CTP2_STANDARD_FONT {
	# Runtime type.
	string	objecttype		"ctp2_TabGroup"
}

### CTP2_TAB ###
# Basis for all tabs.
template CTP2_TAB:CTP2_STANDARD_FONT {
	# Runtime type.
	string	objecttype		"ctp2_Tab"
}

### CTP2_TAB_BUTTON_BASE ###
# Basis for all tab buttons.
template CTP2_TAB_BUTTON_BASE:CTP2_STANDARD_FONT {
	# Runtime type.
	string	objecttype		"ctp2_TabButton"
}

### CTP2_TAB_BUTTON_CHROMA ###
# Basis for all tab buttons.
template CTP2_TAB_BUTTON_CHROMA:CTP2_TAB_BUTTON_BASE {
	# Enable chromakey for blits.
	string	imagebltflag	"chromakey"
}

### CTP2_SIMPLE_TAB_BUTTON ###
# Simple tab button with only a left, right, and active state.
template CTP2_SIMPLE_TAB_BUTTON:CTP2_TAB_BUTTON_CHROMA {
	# Image layout.
	int		numberoflayers		3
	int		imagesperlayer		1

	# Background.
	bool	layerleft0			true
	bool	layeractive1		true
	bool	layerright2			true

	string imageblttype01 "tile"
	string imageblttype11 "tile"
	string imageblttype21 "tile"
}

template CTP2_SMALL_TAB_BUTTON:CTP2_SIMPLE_TAB_BUTTON {
	int imagesperlayer 3
	string image00 "upta03au.tga"
	string image01 "upta03b.tga"
	string image02 "upta03cu.tga"
	string image10 "upta02au.tga"
	string image11 "upta02b.tga"
	string image12 "upta02cu.tga"
	string image20 "upta03au.tga"
	string image21 "upta03b.tga"
	string image22 "upta03cu.tga"

	bool imagestretchx01 true
	bool imagestretchx11 true
	bool imagestretchx21 true
}

#Tab background
template CTP2_TABBG {
	# Image layout.
	int		numberoflayers		1
	int		imagesperlayer		9
	
	# Background.
	bool	layeralways0		true
	string	imagebltflag00	"chromakey"	
	string	image00				"uptg04a.tga"
	
	bool	imagestretchx01		true
	string  imageblttype01      "tile"
	string	image01				"uptg04b.tga"
	
	string	imagebltflag02	"chromakey"
	string	image02				"uptg04c.tga"
	
	bool	imagenextrow03		true
	bool	imagestretchy03		true
	string	image03				"uptg04d.tga"
	
	bool	imagestretchx04		true
	bool	imagestretchy04		true
	string	image04				"uptg04e.tga"
	
	bool	imagestretchy05		true
	string	image05				"uptg04f.tga"
	
	string	imagebltflag06	"chromakey"
	bool	imagenextrow06		true
	string	image06				"uptg04g.tga"
	
	bool	imagestretchx07		true
	string	image07				"uptg04h.tga"
	
	string	imagebltflag08	"chromakey"
	string	image08				"uptg04i.tga"
}


################################################################################
# Generic Control Templates...
################################################################################

### CTP2_GENERIC_TEXT_DISPLAY_20 ###
# Generic sizable text display.  (20 pixels high)
template CTP2_GENERIC_TEXT_DISPLAY_20:CTP2_STATIC_IMAGE_SIZABLE {
	# Background.
#	string	image00				"uptx01a.tga"
#	string	image01				"uptx01b.tga"
#	string	image02				"uptx01c.tga"
	string	image00				"uptg06e.tga"
	string	image01				"uptg06e.tga"
	string	image02				"uptg06e.tga"
	int bevelwidth 2
	int beveltype 1
	bool imagestretchy00 true
	bool imagestretchy01 true
	bool imagestretchy02 true
	bool imagestretchx01 true
	bool imagestretchx00 true
	bool imagestretchx02 true
	int heightpix 20
}

### CTP2_GENERIC_DARKENED_TEXT_DISPLAY_20 ###
# Generic sizable text display with darkened background.  (20 pixels high)
template CTP2_GENERIC_DARKENED_TEXT_DISPLAY_20:CTP2_STATIC_IMAGE_SIZABLE {
	# Background.
	string	image00				"uptx10a.tga"
	string	image01				"uptx10b.tga"
	string	image02				"uptx10c.tga"
}

### CTP2_GENERIC_TEXT_DISPLAY_14 ###
# Generic sizable text display.  (14 pixels high)
template CTP2_GENERIC_TEXT_DISPLAY_14:CTP2_STATIC_IMAGE_SIZABLE {
	# Background.
	string	image00				"uptx02a.tga"
	string	image01				"uptx02b.tga"
	string	image02				"uptx02c.tga"
}

### CTP2_GENERIC_DARKENED_TEXT_DISPLAY_14 ###
# Generic sizable text display with darkened background.  (14 pixels high)
template CTP2_GENERIC_DARKENED_TEXT_DISPLAY_14:CTP2_STATIC_IMAGE_SIZABLE {
	# Background.
	string	image00				"uptx11a.tga"
	string	image01				"uptx11b.tga"
	string	image02				"uptx11c.tga"
}

### CTP2_GENERIC_ICON_BUTTON ###
# Generic fixed size button which can be assigned an icon for image40.
template CTP2_GENERIC_ICON_BUTTON:CTP2_BUTTON_ICONIC_OVERLAY {
	# Background.
	string	image00				"upbt03X.tga"
	string	image10				"upbt03U.tga"
	string	image20				"upbt03D.tga"
	string	image30				"upbt03H.tga"
}

### CTP2_GENERIC_SIZABLE_TEXT_BUTTON ###
# Generic sizable button which can be use for text buttons.
template CTP2_GENERIC_SIZABLE_TEXT_BUTTON:CTP2_BUTTON_SIZABLE {
	# Background.
	string	image00				"upbt01aX.tga"
	string	image01				"upbt01bX.tga"
	string	image02				"upbt01cX.tga"
	string	image10				"upbt01aU.tga"
	string	image11				"upbt01bU.tga"
	string	image12				"upbt01cU.tga"
	string	image20				"upbt01aD.tga"
	string	image21				"upbt01bD.tga"
	string	image22				"upbt01cD.tga"
	string	image30				"upbt01aH.tga"
	string	image31				"upbt01bH.tga"
	string	image32				"upbt01cH.tga"
}

### CTP2_GENERIC_SIZABLE_TEXT_BUTTON ###
# Generic sizable button which can be use for text buttons.
template CTP2_GENERIC_SIZABLE_TEXT_BUTTON_20:CTP2_BUTTON_SIZABLE {
	# Background.
	string	image00				"upbt04aX.tga"
	string	image01				"upbt04bX.tga"
	string	image02				"upbt04cX.tga"
	string	image10				"upbt04aU.tga"
	string	image11				"upbt04bU.tga"
	string	image12				"upbt04cU.tga"
	string	image20				"upbt04aD.tga"
	string	image21				"upbt04bD.tga"
	string	image22				"upbt04cD.tga"
	string	image30				"upbt04aH.tga"
	string	image31				"upbt04bH.tga"
	string	image32				"upbt04cH.tga"
}

### CTP2_GENERIC_SIZABLE_SPINNER ###
# Generic sizable horizontal spinner with two arrows and
# a central display.
template CTP2_GENERIC_SIZABLE_SPINNER {
	# Runtime type.
	string objecttype "ctp2_Spinner"

	# Do not auto-instantiate children as part of the normal
	# traversal.
	bool	atomic		true

	# Orientation.
	string	orientation	"horizontal"

	# Standard height.
	int		heightpix	25

	# Ranger type.
	string	type	"spinner"

	# Overlap between the ends of the display and the
	# buttons.
	int		overlap		0

	# Value display.
	autodisplay:CTP2_STATIC_IMAGE_SIZABLE {
		# Background.
		string	image00				"upsp01bl.tga"
		string	image01				"upsp01bm.tga"
		string	image02				"upsp01br.tga"
	}

	# Decrease (left)
	autodecx:CTP2_GENERIC_ARROW_BUTTON {
		# Background.
		string	image00				"upsp01au.tga"
		string	image10				"upsp01ah.tga"
		string	image20				"upsp01ad.tga"
		string	image30				"upsp01ax.tga"
	}

	# Increase (right)
	autoincx:CTP2_GENERIC_ARROW_BUTTON {
		# Background.
		string	image00				"upsp01cu.tga"
		string	image10				"upsp01ch.tga"
		string	image20				"upsp01cd.tga"
		string	image30				"upsp01cx.tga"
	}
}

###############################################################
# Generic in-game UI button placements
###############################################################
# 80 pixel wide Dilaog Nav Button
template CTP2_NAV_BUTTON_80:CTP2_GENERIC_SIZABLE_TEXT_BUTTON {
		int		xpix		41
		int		ypix		354
		int		widthpix	80
}

# 98 pixel wide Dilaog Nav Button 
# for 3 buttons, plus advise and close, set-up.
template CTP2_NAV_BUTTON_98:CTP2_NAV_BUTTON_80 {
		int		xpix		131
		int		widthpix	98
}

# 152 pixel wide Dilaog Nav Button 
# for 2 buttons, plus advise and close, set-up.
template CTP2_NAV_BUTTON_152:CTP2_NAV_BUTTON_80 {
		int		xpix		131
		int		widthpix	152
}


# standard dialogue Advisor button (left-most position).
template CTP2_STANDARD_ADVISOR:CTP2_NAV_BUTTON_80 {
		# Location
		int		xpix		41
		# Label
		string	text	"str_ldl_ND_ADVICE"
}


# standard dialogue close button (right-most position).
template CTP2_STANDARD_CLOSE:CTP2_NAV_BUTTON_80 {
		# Location
		int		xpix		455
		# Label
		string	text	"str_ldl_CLOSE"
		string shortcut "ESC"
}

# buttons for 3 button set-up
# button for position 1 of 3 button set-up.
template CTP2_POSITION_13_BUTTON:CTP2_NAV_BUTTON_98 {
		# Location
		int		xpix		131
}

# button for position 2 of 3 button set-up.
template CTP2_POSITION_23_BUTTON:CTP2_NAV_BUTTON_98 {
		# Location
		int		xpix		239
}

# button for position 3 of 3 button set-up.
template CTP2_POSITION_33_BUTTON:CTP2_NAV_BUTTON_98 {
		# Location
		int		xpix		347
}

# buttons for 2 button setup
# button for position 1 of 2 button set-up.
template CTP2_POSITION_12_BUTTON:CTP2_NAV_BUTTON_152 {
		# Location
		int		xpix		131
}


# button for position 2 of 2 button set-up.
template CTP2_POSITION_22_BUTTON:CTP2_NAV_BUTTON_152 {
		# Location
		int		xpix		293
}

###########################################################
#DIALOG BOX BACKGROUND
#Change image 00,01, and 07,08 in dialog box ldl's to show custom edge art
template CTP2_DIALOG_BG:CTP2_STATIC_IMAGE {
	#set backgrounmd size
	int	widthpix	576
	int	heightpix	384

	# Image layout.
	int		numberoflayers		1
	int		imagesperlayer		9
	
	# Background.
	bool	layeralways0		true
	string	imagebltflag00	"chromakey"	
	string	image00		"uptg20a.tga"
	
	bool	imagestretchx01		true
	string  imageblttype01      "tile"
	string	image01				"uptg20b.tga"
	
	string	imagebltflag02	"chromakey"
	string	image02				"uptg20c.tga"
	
	bool	imagenextrow03		true
	#bool	imagestretchy03		true
	string	image03				"uptg20d.tga"
	
	bool	imagestretchx04		true
	bool	imagestretchy04		true
	string	image04				"uptg20e.tga"
	
	#bool	imagestretchy05		true
	string	image05				"uptg20f.tga"
	
	string	imagebltflag06	"chromakey"
	bool	imagenextrow06		true
	string	image06				"uptg20g.tga"
	
	bool	imagestretchx07		true
	string	image07				"uptg20h.tga"
	
	string	imagebltflag08	"chromakey"
	string	image08				"uptg20i.tga"
}



### CTP2_DIALOG_WINDOW ###
# Generic dialog window in standard format.
template CTP2_DIALOG_WINDOW {
	# Runtime type.
	string objecttype "ctp2_Window"
	bool centeredwindow true

	# Location.
	int		xpix		200
	int		ypix		28
	int		widthpix	576
	int		heightpix	384

	Background:CTP2_DIALOG_BG {
	# Grabable title bar.
		TitleBar:CTP_GREY_TITLE_FONT:CTP2_STATIC_IMAGE {
			# Background.
			int 	widthpix 480
			int 	heightpix 29
			int	xpix	48		
		}
	}
}

### CTP2_DIALOG_WINDOW_TAB_HELPER ###
# Generic tab background for standard dialog window tab panels.
template CTP2_DIALOG_WINDOW_TAB_HELPER:CTP2_STATIC_IMAGE {
	# Location.
	int		xpix		0
	int		ypix		24
	int		widthpix	506
	int		heightpix	292

	# Background.

	int		numberoflayers		1
	int		imagesperlayer		3

	bool		imagestretchy00		true
	string  	imageblttype00      	"tile"
	string	imagebltflag00		"chromakey"
	string	image00			"uptg20j.tga"
	
	bool		imagestretchx01		true
	bool		imagestretchy01		true
	string  	imageblttype01      	"tile"
	string	image01			"uptg20e.tga"
	
	bool		imagestretchy02		true
	string  	imageblttype02      	"tile"
	string	imagebltflag02		"chromakey"
	string	image02			"uptg20j.tga"

}

### CTP2_2TAB_DIALOG_WINDOW ###
# Generic dialog window with two tab panels.
template CTP2_2TAB_DIALOG_WINDOW:CTP2_DIALOG_WINDOW {
	# Primary tab group.
	TabGroup:CTP2_TAB_GROUP {
		# Location.
		int		xpix		35
		int		ypix		31
		int		widthpix	506
		int		heightpix	324

		# First tab.
		Tab1:CTP2_TAB {
			# Tab.
			TabButton:CTP2_SIMPLE_TAB_BUTTON {
				# Background.
				string	image00		"upct21ul.tga"
				string	image10		"upct21u.tga"
				string	image20		"upct21ul.tga"
			}

			# Panel.
			TabPanel:CTP2_DIALOG_WINDOW_TAB_HELPER {
			}
		}

		# Second tab.
		Tab2:CTP2_TAB {
			# Tab.
			TabButton:CTP2_SIMPLE_TAB_BUTTON {
				# Location.
				int		xpix		242

				# Background.
				string image00 "upct22ul.tga"
				string image10 "upct22u.tga"
				string image20 "upct22ul.tga"
			}

			# Panel.
			TabPanel:CTP2_DIALOG_WINDOW_TAB_HELPER {
			}
		}
	}
}




### CTP2_3TAB_DIALOG_WINDOW ###
# Generic dialog window with three tab panels.
template CTP2_3TAB_DIALOG_WINDOW:CTP2_DIALOG_WINDOW {
	# Primary tab group.
	TabGroup:CTP2_TAB_GROUP {
		# Location.
		int		xpix		35
		int		ypix		31
		int		widthpix	506
		int		heightpix	324

		# First tab.
		Tab1:CTP2_TAB {
			# Tab.
			TabButton:CTP2_SIMPLE_TAB_BUTTON {
				# Background.
				string image00 "upct31ur.tga"
				string image10 "upct31u.tga"
				string image20 "upct31ur.tga"
			}

			# Panel.
			TabPanel:CTP2_DIALOG_WINDOW_TAB_HELPER {
			}
		}

		# Second tab.
		Tab2:CTP2_TAB {
			# Tab.
			TabButton:CTP2_SIMPLE_TAB_BUTTON {
				# Location.
				int		xpix		144

				# Background.
				string image00 "upct32ur.tga"
				string image10 "upct32u.tga"
				string image20 "upct32ul.tga"
			}

			# Panel.
			TabPanel:CTP2_DIALOG_WINDOW_TAB_HELPER {
			}
		}

		# Third tab.
		Tab3:CTP2_TAB {
			# Tab.
			TabButton:CTP2_SIMPLE_TAB_BUTTON {
				# Location.
				int		xpix		316

				# Background.
				string image00 "upct33ul.tga"
				string image10 "upct33u.tga"
				string image20 "upct33ul.tga"
			}

			# Panel.
			TabPanel:CTP2_DIALOG_WINDOW_TAB_HELPER {
			}
		}
	}
}

### CTP2_PROGRESS_DISPLAY ###
# Progress display for advances and building.
template OLD_CTP2_PROGRESS_DISPLAY:CTP2_STATIC_GROUP {
	# Size
	int		widthpix		103
	int		heightpix		113

	Title:CTP2_GENERIC_TEXT_DISPLAY_20 {
		# Size
		int		widthpix		103
		int		heightpix		19
	}

	IconBorder:CTP2_STATIC_IMAGE {
		# Location.
		int		xpix		0
		int		ypix		20

		# Background.
		string	image00				"upfg40.tga"

		IconButton:CTP2_BUTTON_ICONIC_OVERLAY {
			# Location.
			int		xpix		3
			int		ypix		3

			# Background.
			string	image00		"upcb16X.tga"
			string	image10		"upcb16U.tga"
			string	image20		"upcb16D.tga"
			string	image30		"upcb16H.tga"

			string imageblttype40 "stretch"
			int widthpix40 96
			int heightpix40 72

			RadialButton:CTP2_BUTTON_ICONIC {
				# Location.
				int		xpix		6
				int		ypix		61

				# Background.
				string	image00		"upcb15X.tga"
				string	image10		"upcb15U.tga"
				string	image20		"upcb15D.tga"
				string	image30		"upcb15H.tga"
			}
		}
	}
}

################################################################################
# Old templates with minor revisions...
################################################################################

##################################################
#
# CTP2_WINDOW TEMPLATE
#
template CTP2_WINDOW {
	string objecttype "ctp2_Window"
}

##################################################
#
# Generic Text Box Template
#
template CTP2_TEXT_BOX:CTP2_GENERIC_TEXT_DISPLAY_20 {
}
	
##################################################
#
# Generic Border box (looks like list box)
#
template CTP2_BORDER_BOX {
	# Image layout.
	int		numberoflayers		1
	int		imagesperlayer		9

	int	borderwidth  5
	int 	borderheight 5
	
	# Background.
	bool	layeralways0		true
	string	image00				"uptg06a.tga"
	bool	imagestretchx01		true
	string  imageblttype01      "tile"
	string	image01				"uptg06b.tga"
	string	image02				"uptg06c.tga"
	bool	imagenextrow03		true
	bool	imagestretchy03		true
	string	image03				"uptg06d.tga"
	bool	imagestretchx04		true
	bool	imagestretchy04		true
	string	image04				"uptg06e.tga"
	bool	imagestretchy05		true
	string	image05				"uptg06f.tga"
	bool	imagenextrow06		true
	string	image06				"uptg06g.tga"
	bool	imagestretchx07		true
	string	image07				"uptg06h.tga"
	string	image08				"uptg06i.tga"

}

##################################################
# 
# CTP2_LIST_ITEM
#
template CTP2_LIST_ITEM:CTP2_STANDARD_FONT {
	# Runtime type.
	string	objecttype	"ctp2_ListItem"

	# ???
	bool	detach		true
}

##################################################
# 
# CTP2_LISTBOX
#
template CTP2_LISTBOX:CTP2_BORDER_BOX {
	# Runtime type.
	string	objecttype			"ctp2_ListBox"

	# Consider this as a single control... I believe?
	bool	atomic				true
	
	#Set ranger to always be visable.
	bool alwaysranger TRUE

	# Scrollbar.
	rangery {
		# Why is this here?
		int	widthpix	15
		int	heigthpix	15

		# Type of scrollbar, what are they?
		string	type	"scroller"

		# Vertical orientation.
		string	orientation	"vertical"

		# Background pattern, this is also going to change.
		string	pattern	"uptg04e.tga"

		# Up button.
		incy {
			int	widthpix	15
			int	heightpix	15
			string	pattern	"upbt13.tga"
		}

		# Down button.
		decy {
			int	widthpix	15
			int	heightpix	15
			string	pattern	"upbt13.tga"
		}

		thumb {
			int widthpix 15
			string	pattern	"upbt14.tga"
		}

	}
}




##################################################
# 
# CTP2_MENU
#
template CTP2_MENU:CTP2_WINDOW {
	int xpix 0
	int ypix 0
	int widthpix 150
	bool detach true

	List:CTP2_LISTBOX {
		int numberoflayers 1
		int imagesperlayer 3

		bool layeralways0 true
		bool imagestretchy00 true
		string image00 "uptg05a.tga"

		bool imagestretchx01 true
		bool imagestretchy01 true
		string image01 "uptg05b.tga"

		bool imagestretchy02 true
		string image02 "uptg05c.tga"
		
		int xpix 2
		int ypix 2
		string pattern "uptg01e.TGA"
	}
}

##################################################
# 
# CTP2_DROPDOWN
#
template CTP2_DROPDOWN {
	# Runtime type.
	string	objecttype	"ctp2_DropDown"

	# Consider this as a single control... I believe?
	bool	atomic		true

	# Left justify and vertically center text.
	string	just		"left"
	bool	vertcenter	TRUE
	
	# Button.
	autobutton:CTP2_BUTTON_SIZABLE {
		# Don't use highlighting until we fix the problem where
		# the button redraws but doesn't tell the drop down
		# to redraw the selected item.
		bool	nohighlight			true

		# Image layout.
		int		numberoflayers		4
		int		imagesperlayer		5

		# Background.
		bool	layeralways0		true
		bool	layerup1			true
		bool	layerdown2			true
		bool	layerhighlight3		true

		# Mark the middle images as stretchable.
		bool	imagestretchx01		true
		bool	imagestretchx11		true
		bool	imagestretchx21		true
		bool	imagestretchx31		true
		bool	imagestretchx03		true
		bool	imagestretchx13		true
		bool	imagestretchx23		true
		bool	imagestretchx33		true

		# Always.
		string image00	"uppd02aX.tga"
		string image01	"uppd02bX.tga"
		string image02	"uppd02cX.tga"
		string image03	"uppd02bX.tga"
		string image04	"uppd02dX.tga"

		# Up.
		string image10	"uppd02aU.tga"
		string image11	"uppd02bU.tga"
		string image12	"uppd02cU.tga"
		string image13	"uppd02bU.tga"
		string image14	"uppd02dU.tga"

		# Down.
		string image20	"uppd02aU.tga"
		string image21	"uppd02bU.tga"
		string image22	"uppd02cD.tga"
		string image23	"uppd02bU.tga"
		string image24	"uppd02dU.tga"

		# Highlight.
		string image30	"uppd02aH.tga"
		string image31	"uppd02bH.tga"
		string image32	"uppd02cH.tga"
		string image33	"uppd02bH.tga"
		string image34	"uppd02dH.tga"

		# Mark as a drop down button.
		bool dropdownbutton true
	}

	# Window containing list box.
	window:CTP2_WINDOW {
		# Default height.
		int heightpix 40

		# Background pattern.
		string pattern "uptg01e.tga"

		# Standard listbox.
		listbox:CTP2_LISTBOX {
			# No bevel.
			int bevelwidth	0
			int beveltype	0

			# Background pattern.
			#string pattern "uptg01e.tga"
		}
	}
}

##################################################
# 
# CTP2_SPINNER
#
template CTP2_SPINNER:CTP2_GENERIC_SIZABLE_SPINNER {
}

################################################################################
# Old Button Templates for backwards compatibility...
################################################################################

##################################################
# 
# CTP2_BUTTON_TITLE_BAR
#
template CTP2_BUTTON_TITLE_BAR:CTP2_BUTTON_NO_OVERLAY_STATES {
	# Background.
	string	image00				"b4_titlebar_up.tga"
	string	image10				"b4_titlebar_up.tga"
	string	image20				"b4_titlebar_hilite.tga"
	string	image30				"b4_titlebar_down.tga"
}

##################################################
# 
# CTP2_BUTTON_NODULE_ONLY_LARGE
#
template CTP2_BUTTON_NODULE_ONLY_LARGE:CTP2_BUTTON_ICONIC_OVERLAY {
	# Background.
	string	image00				"upbt03X.tga"
	string	image10				"upbt03U.tga"
	string	image20				"upbt03D.tga"
	string	image30				"upbt03H.tga"
}

##################################################
# 
# CTP2_BUTTON_NODULE_ONLY_SMALL
#
template CTP2_BUTTON_NODULE_ONLY_SMALL:CTP2_BUTTON_ICONIC_OVERLAY {
	# Background.
	string	image00				"upbt03X.tga"
	string	image10				"upbt03U.tga"
	string	image20				"upbt03D.tga"
	string	image30				"upbt03H.tga"
}

##################################################
# 
# CTP2_PROGRESS_BUTTON
#
template CTP2_PROGRESS_BUTTON:CTP2_BUTTON_NODULE_ONLY_SMALL {
	# Background.
	string	image00				"upcb15X.tga"
	string	image10				"upcb15U.tga"
	string	image20				"upcb15D.tga"
	string	image30				"upcb15H.tga"
}



##################################################
# 
# CTP2_BUTTON_LARGE
#
template CTP2_BUTTON_LARGE:CTP2_BUTTON_SIZABLE {
	# Background.
	string	image00				"upbt01aX.tga"
	string	image01				"upbt01bX.tga"
	string	image02				"upbt01cX.tga"
	string	image10				"upbt01aU.tga"
	string	image11				"upbt01bU.tga"
	string	image12				"upbt01cU.tga"
	string	image20				"upbt01aD.tga"
	string	image21				"upbt01bD.tga"
	string	image22				"upbt01cD.tga"
	string	image30				"upbt01aH.tga"
	string	image31				"upbt01bH.tga"
	string	image32				"upbt01cH.tga"
}

##################################################
# 
# CTP2_BUTTON_SMALL
#
template CTP2_BUTTON_SMALL:CTP2_BUTTON_SIZABLE {
	# Background.
	string	image00				"upbt01aX.tga"
	string	image01				"upbt01bX.tga"
	string	image02				"upbt01cX.tga"
	string	image10				"upbt01aU.tga"
	string	image11				"upbt01bU.tga"
	string	image12				"upbt01cU.tga"
	string	image20				"upbt01aD.tga"
	string	image21				"upbt01bD.tga"
	string	image22				"upbt01cD.tga"
	string	image30				"upbt01aH.tga"
	string	image31				"upbt01bH.tga"
	string	image32				"upbt01cH.tga"
}

################################################################################
# Other...
################################################################################

##################################################
##           Ctp2 Switch  Template              ##
##################################################
template CTP2_SWITCH:CTP2_STANDARD_FONT {
	string	objecttype	"ctp2_switch"
}


##################################################
#
# CTP2_MENUBAR TEMPLATE
#
##################################################
template CTP2_MENUBAR {
	string objecttype "ctp2_MenuBar"
}

template CTP2_MENUBAR_FONT:CTP2_STANDARD_FONT {
}

##################################################
#
# Window with title bar
#
##################################################
template CTP2_TITLE_WINDOW {
	string objecttype "ctp2_Window"
	TitleBar:CTP2_TEXT_BOX {
		int xpix 0
		int ypix 0
		int heightpix 20
		int widthpix 20 # will be resized by code
	}
}

##################################################
#
# Button Templates
#
##################################################

##################################################
# 
# CTP_CLOSE_BUTTON
#
template CTP_CLOSE_BUTTON:CTP2_STANDARD_FONT {
	int	widthpix	71
	int	heightpix	38
	int	bevelwidth	0
	string	text	"str_ldl_CLOSE"
	string	image0	"error.tga"
	string	image1	"error.tga"
	string	imagebltflag	"chromakey"
}

##################################################
# 
# CTP2_LISTBOX and variations
#
##################################################

##################################################
# 
# CTP2_BUTTON_TITLE_BAR
#
template CTP2_LISTBOX_WITH_HEADER {
	string	objecttype	"ctp2_ListBox"
	bool	atomic		true

	string	pattern	"uptg11.tga"

	rangery {
		int		widthpix	15
		int		heigthpix	15
		string	type		"scroller"
		string	orientation	"vertical"
		string	pattern		"uptg11.tga"
		bool	rigidthumb	true
		
		incy {
			int	widthpix	15
			int	heightpix	15
			string	pattern	"uptg13.tga"
		}
		decy {
			int	widthpix	15
			int	heightpix	15
			string	pattern	"uptg13.tga"
		}
	}

	header {
		switch0:CTP2_HEADER_FONT {
			int	widthpix	20
			int	heightpix	20
			string	pattern	"uptg04e.tga"
			int bevelwidth 	1
		}
	}
}

template CTP2_HYPER_TEXT_BOX:CTP2_STANDARD_FONT {
	string objecttype "ctp2_hypertextbox"
	int beveltype  2
	int bevelwidth 1 
	string pattern "uptg06e.tga"
	bool atomic true
	rangery {
		int	widthpix	15
		string	type	"scroller"
		string	orientation	"vertical"
		string	pattern	"uptg06e.tga"
		int	maxxval	0
		incy {
			int	heightpix	15
			int widthpix 15
			string	pattern	"upbt13.tga"
		}
		decy {
			int	heightpix	15
			int widthpix 15
			string	pattern	"upbt13.tga"
		}
		thumb {
			int widthpix 15
			string	pattern	"upbt14.tga"
		}
	}
}

template CTP2_MENU_ITEM_FONT:CTP2_STANDARD_FONT {
}

PlainMenuListItem:CTP2_LIST_ITEM {
	int widthpix 150
	int heightpix 16

	box {
		string objecttype "ctp2_Static"
		int widthpix 150
		int heightpix 16
		
		text:CTP2_MENU_ITEM_FONT {
			string objecttype "ctp2_Static"
#			string pattern "error.tga"
#			string pattern "UPTG02.TGA"
 			string textblttype "fill"
			string just        "left"
			bool   vertcenter  false

			#int widthpix 120
			int heightpix 16
		}

		shortcut:CTP2_MENU_ITEM_FONT {
			string objecttype "ctp2_Static"
#			string pattern "error.tga"
#			string pattern "UPTG02.TGA"
			string textblttype "fill"
			string just        "right"
			bool   vertcenter  false

			int widthpix 30
			int heightpix 16
		}
	}
}

IconMenuListItem:CTP2_LIST_ITEM {
	int widthpix 150
	int heightpix 18

	box {
		string objecttype "ctp2_Static"
		int widthpix 150
		int heightpix 16
		
		text:CTP2_MENU_ITEM_FONT {
			string objecttype "ctp2_Static"
#			string pattern "error.tga"
#			string pattern "UPTG02.TGA"
			string textblttype "fill"
			string just        "left"
			bool   vertcenter  true

			# width of this box will be set programatically
			int heightpix 16
		}

		shortcut:CTP2_MENU_ITEM_FONT {
			string objecttype "ctp2_Static"
#			string pattern "error.tga"
#			string pattern "UPTG02.TGA"
			string textblttype "fill"
			string just        "left"
			bool   vertcenter  true

			int widthpix 30
			int heightpix 16
		}

		icon {
			string objecttype "ctp2_Static"
#			string pattern "error.tga"
#			string pattern "UPTG02.TGA"
			bool vertcenter true
			int heightpix 16
		}
	}
}

template CTP2_TEXT_FIELD:CTP2_STANDARD_FONT {
	string objecttype "ctp2_Textfield"
	int heightpix 20
}

template CTP2_CHECK_BUTTON:CTP2_BUTTON_ICONIC {
		int		imagesperlayer		3
	
		# Background.
		string	image00				"upbt01aX.tga"
		string	image01				"upbt01cX.tga"
		string	image10				"upbt01aU.tga"
		string	image11				"upbt01cU.tga"
		string	image20				"upbt01aD.tga"
		string	image21				"upbt01cD.tga"
		string	image30				"upbt01aH.tga"
		string	image31				"upbt01cH.tga"
}

template CTP2_STANDARD_DIALOG_PATTERN:CTP2_STATIC_BACKGROUND {
		# Image layout.
		int		numberoflayers		1
		int		imagesperlayer		9

		# Background.
		bool	layeralways0		true
		string	image00				"uptg03a.tga"
		bool	imagestretchx01		true
		string	image01				"uptg03b.tga"
		string	image02				"uptg03c.tga"
		bool	imagenextrow03		true
		bool	imagestretchy03		true
		string	image03				"uptg03d.tga"
		bool	imagestretchx04		true
		bool	imagestretchy04		true
		string	image04				"uptg20e.tga"
		bool	imagestretchy05		true
		string	image05				"uptg03f.tga"
		bool	imagenextrow06		true
		string	image06				"uptg03g.tga"
		bool	imagestretchx07		true
		string	image07				"uptg03h.tga"
		string	image08				"uptg03i.tga"
}

template CTP2_LABELLED_CHECK_BUTTON:CTP2_STATIC_BASE {
	int heightpix 25
	Toggle:CTP2_CHECK_BUTTON {
	}

	Label:CTP2_STATIC_BASE {
		int xpix 25
		bool vertcenter true
		string just "left"
	}
}

### CTP2_PROGRESS_DISPLAY ###
# Progress display for advances and building.
template CTP2_PLAIN_BUILD_BUTTON:CTP2_STATIC_GROUP {
	# Size
	int		widthpix		103
	int		heightpix		72

	IconBorder:CTP2_STATIC_IMAGE {
		# Location.
		int		xpix		0
		int		ypix		0

		# Background.
		string	image00				"upfg40.tga"

		IconButton:CTP2_BUTTON_ICONIC_OVERLAY {
			# Location.
			int		xpix		3
			int		ypix		3

			# Background.
			string	image00		"upcb16X.tga"
			string	image10		"upcb16U.tga"
			string	image20		"upcb16D.tga"
			string	image30		"upcb16H.tga"

			string imageblttype40 "stretch"
			int widthpix40 96
			int heightpix40 72
		}
	}
}

template CTP2_NO_TITLE_PROGRESS_DISPLAY:CTP2_PLAIN_BUILD_BUTTON {
	int heightpix 93
	IconBorder {
		IconButton {

			ProgressBarParent:CTP2_STATIC_BASE {
				int 	numberoflayers 1
				int 	imagesperlayer 1
				string	image00 "upcb15pb.tga"
				bool 	layeralways0 true
				string imagebltflag "chromakey"

				int xpix 6
				int ypix 77
				int widthpix 85
				int heightpix 8

				ProgressBar:CTP2_STATIC_BASE {

					int xpix 3
					int ypix 0
					int widthpix 78
					int heightpix 4
				}
			}

			RadialButton:CTP2_PROGRESS_BUTTON {
				
				string fontname 			"times.ttf"
				int fontsize				8

				int		xpix		6
				int		ypix		61
				int     widthpix    85
				int	heightpix	18
				bool    vertcenter  false
			}


		}
	}
}

### CTP2_PROGRESS_DISPLAY ###
# Progress display for advances and building.
template CTP2_PROGRESS_DISPLAY:CTP2_NO_TITLE_PROGRESS_DISPLAY {
	# Size
	int		widthpix		103
	int		heightpix		113

	Title:CTP2_GENERIC_TEXT_DISPLAY_20 {
		# Size
		int		widthpix		103
		int		heightpix		19
	}
	IconBorder {
		int ypix 20
	}
}

template CTP2_CHECKBOX:CTP2_BUTTON_SIZABLE {
	string objecttype "ctp2_Button"

	bool togglebutton true

	int		imagesperlayer		3
	int     numberoflayers		5

	string  imageblttype01 "tile"
	string  imageblttype11 "tile"
	string  imageblttype21 "tile"
	string  imageblttype31 "tile"
	string  imageblttype41 "tile"

	# Mark the middle images as stretchable.
	bool	imagestretchx01		true
	bool	imagestretchx11		true
	bool	imagestretchx21		true
	bool	imagestretchx31		true
	bool    imagestretchx41     true

	string	image00				"upbt01aX.tga"
	string	image01				"upbt01bX.tga"
	string	image02				"upbt01cX.tga"

	string	image10				"upbt01aU.tga"
	string	image11				"upbt01bU.tga"
	string	image12				"upbt01cU.tga"

	string	image20				"upbt01aD.tga"
	string	image21				"upbt01bD.tga"
	string	image22				"upbt01cD.tga"

	string	image30				"upbt01aH.tga"
	string	image31				"upbt01bH.tga"
	string	image32				"upbt01cH.tga"

	string  image40             "upbt01aD.tga"
	string  image41             "upbt01bD.tga"
	string  image42             "upbt01cD.tga"


	bool	layeralways0		true
	bool	layerup1			true
	bool	layerdown2			true
	bool    layerupon4          true
	bool	layerhighlight3		true
}

c3_PopupTitle {

	int	widthpix	167

	int	heightpix	34

	c3_PopupTitleText:CTP_GREY_TITLE_FONT {

		int	xpix	0

		int	ypix	20

		int	widthpix	167

		int	heightpix	20

		string	text	"str_ldl_TITLE"
	}

}


$
