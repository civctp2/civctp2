//----------------------------------------------------------------------------
//
// Project      : Call To Power 2
// File type    : C++ header
// Description  : Miles Sound System library interface
//
//----------------------------------------------------------------------------
//
// Disclaimer
//
// This file has been generated by inspection and debugging of the Call To
// Power 2 source code by Activision, and contains only those items that are
// used by this source code. It is not a description of the entire Miles Sound
// System library interface.
//
// THIS FILE IS NOT GENERATED OR SUPPORTED BY RAD Game Tools, Inc.
// THIS FILE IS NOT GENERATED OR SUPPORTED BY ACTIVISION.
//
// This material has been developed at apolyton.net by the Apolyton CtP2
// Source Code Project. Contact the authors at ctp2source@apolyton.net.
//
// Miles Sound System is a trademark of RAD Game Tools, Inc.
//
//----------------------------------------------------------------------------
//
// Compiler flags
//
// USE_MILES_STUBS
//
// - When defined, provides non-functional stubs for the Miles functions.
//   In this way, mss32.lib and mss32.dll are not required to create and run
//   the program, but you will not get any sound.
// - When not defined, provides prototypes for the Miles functions only.
//   This requires mss32.lib to be available when linking and mss32.dll when
//   running the program.
//   An mss32.lib has been generated by jonwil for the Apolyton CtP2 Source
//   Code Project, and mss32.dll is part of the retail distribution of Call To
//   Power 2.
//
//----------------------------------------------------------------------------

#ifndef MSS_CTP_H
#define MSS_CTP_H

//----------------------------------------------------------------------------
// Library dependencies
//----------------------------------------------------------------------------

#include <windows.h>    // HANDLE, INVALID_HANDLE_VALUE, MBCHAR, WINAPI

//----------------------------------------------------------------------------
// Exported names
//----------------------------------------------------------------------------

typedef HANDLE	        HAUDIO;
typedef HANDLE          HDIGDRIVER;
typedef HANDLE          HDLSDEVICE;
typedef HANDLE          HMDIDRIVER;
typedef HANDLE	        HREDBOOK;
typedef signed int      S32;
typedef unsigned int    U32;

enum    AudioStatus
{
    QSTAT_ERROR                     = 0,
    QSTAT_DONE                      = 1,
	QSTAT_BUSY						= 3
}; // S32

enum    DigitalUsage
{
    AIL_QUICK_USE_WAVEOUT,                  // Debug, value unknown
    DONT_KNOW_WHAT_TO_CALL_THIS     = 1     // Release and Final
}; // S32

enum	RedbookStatus
{
    REDBOOK_ERROR					= 0,
    REDBOOK_PLAYING					= 1,
	REDBOOK_STOPPED					= 3,
    REDBOOK_PAUSED                          // value unknown
}; // U32

//----------------------------------------------------------------------------
// Local shorthands
//----------------------------------------------------------------------------

#if defined(USE_MILES_STUBS)
// Define all functions as inline with stubbed code.
// In this way, there is no need to create an mss.cpp. To make it work, you
// have to remove the ..\libs\miles\mss32.lib reference from the link step.
#define MILES_API(a_Type)   inline a_Type
#define STUB(a_Code)        { a_Code }
#else
// Disable the stubbed code, and only declare the prototypes.
#define MILES_API(a_Type)   extern "C" __declspec(dllimport) a_Type WINAPI
#define STUB(a_Code)
#endif

//----------------------------------------------------------------------------
// Exported function declarations
//----------------------------------------------------------------------------

MILES_API(S32)      AIL_digital_handle_reacquire
(
    HDIGDRIVER          a_Handle
) STUB( return 0; );

//----------------------------------------------------------------------------

MILES_API(S32)      AIL_digital_handle_release
(
    HDIGDRIVER          a_Handle
) STUB( return 1; );

//----------------------------------------------------------------------------

MILES_API(S32)      AIL_digital_master_volume
(
    HDIGDRIVER          a_Handle
) STUB( return 0; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_set_digital_master_volume
(
    HDIGDRIVER          a_Handle,
    S32                 a_Volume
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(void)		AIL_quick_handles
(
    HDIGDRIVER *      	a_pHandleDig,
    HMDIDRIVER *        a_pHandleMdi,
    HDLSDEVICE *        a_pHandleDls
)
STUB( *a_pHandleDig = *a_pHandleMdi = *a_pHandleDls = INVALID_HANDLE_VALUE; )
;

//----------------------------------------------------------------------------

MILES_API(HAUDIO)   AIL_quick_load_mem
(
    void *              a_Dataptr,
    S32                 a_Datasize
) STUB( return INVALID_HANDLE_VALUE; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_quick_halt
(
    HAUDIO              a_Handle
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_quick_play
(
    HAUDIO              a_Handle,
    S32                 a_Unknown            // 1
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_quick_shutdown() STUB( ; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_quick_set_volume
(
    HAUDIO              a_Handle,
    S32                 a_Volume,
    S32                 a_PanValue
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(S32)      AIL_quick_startup
(
     S32                a_UseDigital,
     S32                a_UseMidi,
     S32                a_OutputRate,
     S32                a_OutputBits,
     S32                a_OutputChannels
) STUB( return QSTAT_ERROR; );

//----------------------------------------------------------------------------

MILES_API(S32)      AIL_quick_status
(
    HAUDIO              a_Handle
) STUB( return QSTAT_ERROR; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_quick_unload
(
    HAUDIO              a_Handle
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_redbook_close
(
    HREDBOOK            a_Handle
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(HREDBOOK) AIL_redbook_open_drive
(
    MBCHAR              a_Drive
) STUB( return INVALID_HANDLE_VALUE; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_redbook_play
(
    HREDBOOK            a_Handle,
    U32                 a_StartTrack,
    U32                 a_EndTrack
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_redbook_set_volume
(
    HREDBOOK            a_Handle,
    S32                 a_Volume
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(U32)      AIL_redbook_status
(
    HREDBOOK            a_Handle
) STUB( return REDBOOK_ERROR; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_redbook_stop
(
    HREDBOOK            a_Handle
) STUB( ; );

//----------------------------------------------------------------------------

MILES_API(S32)		AIL_redbook_track
(
    HREDBOOK            a_Handle
) STUB( return 0; );

//----------------------------------------------------------------------------

MILES_API(void)     AIL_redbook_track_info
(
    HREDBOOK            a_Handle,
    S32                 a_TrackNum,
    U32 *               a_pStartTrack,
    U32 *               a_pEndTrack
) STUB( *a_pStartTrack = *a_pEndTrack = 0; );

//----------------------------------------------------------------------------

MILES_API(S32)      AIL_redbook_tracks
(
    HREDBOOK            a_Handle
) STUB( return 0; );

//----------------------------------------------------------------------------
// Local clean-up
//----------------------------------------------------------------------------

#undef  MILES_API
#undef  STUB

#endif // Multiple include guard
