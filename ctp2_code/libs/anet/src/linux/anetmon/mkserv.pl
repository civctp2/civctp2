# Collects game server connect information from output file generated by
# load and writes it out to server.html

#path to output file generated by load
$log = "load/load0.out";
#number of records to keep in $log
$NSAVE = 24;

#open output file generated by load and get game server connect info;
#if number of records is greater than NSAVE, keep only NSAVE latest records
#in output file
$firstserver = "";
open (LOG, $log) || die "Can't open file: " . $log . "\n";
while (<LOG>) {
	if (/\d+\s+(\S+).*\s+(\d+\.\d+).*\s+(\d+\.\d+).*\s+(\d+\.\d+).*\s+(\d+\.\d+)./) {
		$server = $1;
		$findtime{$server} = $2;
		$jointime{$server} = $3;
		$playertime{$server} = $4;
		$totaltime{$server} = $5;
		$mostrecent{$server} = "connected";
		if ($firstserver eq "") {
			$firstserver = $server;
		}
		$server{$server} = $server;
	} elsif (/\d+\s+(\S+).*=\s+\*\*\*./) {
		$server = $1;
		$failure{$server} += 1;
		$mostrecent{$server} = "not connected";
		$server{$server} = $server;
	}
	push(@filetxt, $_);
}
close LOG;
$nFoundLine = 0;
$FoundLine = "Setting server to " . $firstserver;
while (($nFoundLine < $NSAVE) && ($#filetxt > 0)) {
	$line = pop(@filetxt);
	unshift(@outlog, $line);
	if ($line =~ /$FoundLine/) {
		$nFoundLine += 1;
	}
}
if ($#filetxt > 0) {
	$outlog = join('', @outlog);
	open (LOG, "> $log") || die "Can't open file: " . $log . "\n";
	print LOG $outlog;
	close LOG;
}

#initialize uninitialized variables
foreach $server (keys(%server)) {
	if ($findtime{$server} eq "") {
		$findtime{$server} = "-";
	}
	if ($jointime{$server} eq "") {
		$jointime{$server} = "-";
	}
	if ($playertime{$server} eq "") {
		$playertime{$server} = "-";
	}
	if ($totaltime{$server} eq "") {
		$totaltime{$server} = "-";
	}
	if ($failure{$server} eq "") {
		$failure{$server} = "0";
	}
}

#output info to server.html using format from server.in
$in = "server.in";
$out = "server.html";
open (IN, $in) || die "Can't open file: " . $in . "\n";
open (OUT, "> $out") || die "Can't open file: " . $out . "\n";
$time = `date`;
while (<IN>) {
	if (/^SERVLIST sep=(.*) after=(.*)/) {
		$sep = $1;
		$after = $2;
		foreach $server (sort keys(%server)) {
			$after2 = $after;
			$after2 =~ s/\{FINDTIME\}/$findtime{$server}/;
			$after2 =~ s/\{JOINTIME\}/$jointime{$server}/;
			$after2 =~ s/\{PLAYERTIME\}/$playertime{$server}/;
			$after2 =~ s/\{TOTTIME\}/$totaltime{$server}/;
			$after2 =~ s/\{FAILURE\}/$failure{$server}/;
			$after2 =~ s/\{MOSTRECENT\}/$mostrecent{$server}/;
			push(@outserv, "<A HREF=\"http://" . $server . "/anet2\">" . $server . "</A><td>" . $after2 . "\n");
		}
		$_ = join($sep, @outserv);
	} elsif (/\{TIME\}/) {
		$_ =~ s/\{TIME\}/$time/;
	}
	print OUT;
}
close IN;
close OUT;
